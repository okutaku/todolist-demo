[{"/Users/yamataku/Desktop/todolist-demo/src/reportWebVitals.js":"1","/Users/yamataku/Desktop/todolist-demo/src/index.js":"2","/Users/yamataku/Desktop/todolist-demo/src/App.jsx":"3"},{"size":362,"mtime":1610675705734,"results":"4","hashOfConfig":"5"},{"size":201,"mtime":1610678191305,"results":"6","hashOfConfig":"5"},{"size":1648,"mtime":1610689491109,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4r99od",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"/Users/yamataku/Desktop/todolist-demo/src/reportWebVitals.js",[],"/Users/yamataku/Desktop/todolist-demo/src/index.js",[],"/Users/yamataku/Desktop/todolist-demo/src/App.jsx",["15"],"import React, { useState } from 'react';\nimport \"./index.css\";\n\nexport const App = () => {\n  const [todoLine, setTodoLine] = useState('');\n\n  const [incompleteTodos, setIncompleteTodos] = useState([\n    \"1項目目\",\n    \"2項目目\"\n  ]);\n\n  const [completeTodos, setCompleteTodos] = useState([\n    \"３項目目\",\n  ]);\n\n  const onClickAdd = () => {\n    if (todoLine === \"\") return(\n      alert(\"「やるべきこと」に文字を入力してください\")\n    );\n    const newTodos = [...incompleteTodos, todoLine];\n    setIncompleteTodos(newTodos);\n    setTodoLine(\"\");\n  }\n\n  const onChangeTodoLine = e => setTodoLine(e.target.value);\n  return (\n    <div className=\"app\">\n      <div className=\"input-area\">\n        <input placeholder=\"やるべきこと\" value={todoLine} onChange={onChangeTodoLine}/>\n        <button onClick={onClickAdd}>追加</button>\n      </div>\n      <div className=\"incomplete-area\">\n        <p className=\"title\">未完了のTODO</p>\n        <ul>\n          {incompleteTodos.map((todo) => {\n            return(\n              <div key={todo} className=\"list\">\n                <li>{todo}</li>\n                <button>完了</button>\n                <button>削除</button>\n              </div>\n            );\n          })}\n        </ul>\n      </div>\n      <div className=\"complete-area\">\n        <p className=\"title\">完了のTODO</p>\n        <ul>\n        {completeTodos.map((todo) => {\n            return(\n              <div key={todo} className=\"list\">\n                <li>{todo}</li>\n                <button>戻す</button>\n              </div>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  )\n}",{"ruleId":"16","severity":1,"message":"17","line":12,"column":25,"nodeType":"18","messageId":"19","endLine":12,"endColumn":41},"no-unused-vars","'setCompleteTodos' is assigned a value but never used.","Identifier","unusedVar"]